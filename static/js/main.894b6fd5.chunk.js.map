{"version":3,"sources":["Project/alghorithms/dfs.js","Project/alghorithms/dijkstra.js","Project/alghorithms/a-star.js","Project/Visualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Node","row","col","isEnter","isExit","isWallOrVisited","predecessor","undefined","this","x","y","flag","visited","path","alg","nodes","push","pop","dfs","cells","rows","cols","startRow","startCol","i","j","type","console","log","shift","dijkstra","startX","startY","queue","length","l","t","unshift","distance","Infinity","QElement","element","priority","PriorityQueue","items","qElement","contain","splice","isEmpty","exitRow","exitCol","Math","abs","A_Star","put","Cell","enterRow","enterCol","isMousePressed","isWorking","isClearNeeded","paintType","changePaintType","s","document","getElementById","className","clearGrid","onMouseDown","changeEnter","changeExit","animateVisited","ids","alghorithm","a","time","Promise","res","setTimeout","animatePath","alert","value","Visualizer","props","currentRow","setState","id","onClick","src","alt","htmlFor","name","visualize","map","r","c","onMouseUp","onMouseEnter","toString","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.894b6fd5.chunk.js","sourcesContent":["class Node {\r\n  isEnter = false;\r\n  isExit = false;\r\n  isWallOrVisited = false;\r\n  x;\r\n  y;\r\n  predecessor = undefined;\r\n  constructor(row, col) {\r\n    this.x = col;\r\n    this.y = row;\r\n    this.isExit = false;\r\n    this.isWallOrVisited = false;\r\n  }\r\n}\r\n\r\nlet flag = false;\r\nlet visited = [];\r\nlet path = [];\r\n\r\nfunction alg(nodes, y, x) {\r\n  if (nodes[y][x].isExit) {\r\n    path.push(`[${y - 1}, ${x - 1}]`);\r\n    flag = true;\r\n    return;\r\n  }\r\n  nodes[y][x].isWallOrVisited = true;\r\n  visited.push(`[${y - 1}, ${x - 1}]`);\r\n  path.push(`[${y - 1}, ${x - 1}]`);\r\n  if (!flag && !nodes[y][x + 1].isWallOrVisited) {\r\n    alg(nodes, y, x + 1);\r\n  }\r\n  if (!flag && !nodes[y + 1][x].isWallOrVisited) {\r\n    alg(nodes, y + 1, x);\r\n  }\r\n  if (!flag && !nodes[y][x - 1].isWallOrVisited) {\r\n    alg(nodes, y, x - 1);\r\n  }\r\n  if (!flag && !nodes[y - 1][x].isWallOrVisited) {\r\n    alg(nodes, y - 1, x);\r\n  }\r\n  if (!flag) {\r\n    path.pop();\r\n  }\r\n  return;\r\n}\r\n\r\nexport default function dfs(cells, rows, cols) {\r\n  flag = false;\r\n  visited = [];\r\n  path = [];\r\n  let nodes = [];\r\n  let startRow, startCol;\r\n  for (let i = 0; i < rows + 2; ++i) {\r\n    let row = [];\r\n    for (let j = 0; j < cols + 2; ++j) {\r\n      row.push(new Node(i, j));\r\n      if (i === 0 || i === rows + 1 || j === 0 || j === cols + 1) {\r\n        row[j].isWallOrVisited = true;\r\n      } else {\r\n        switch (cells[i - 1][j - 1].type) {\r\n          case \"wall\":\r\n            row[j].isWallOrVisited = true;\r\n            break;\r\n          case \"enter\":\r\n            row[j].isEnter = true;\r\n            startRow = i;\r\n            startCol = j;\r\n            console.log(startCol, startRow);\r\n            row[j].isWallOrVisited = false;\r\n            break;\r\n          case \"exit\":\r\n            row[j].isExit = true;\r\n            row[j].isWallOrVisited = false;\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n    }\r\n    nodes.push(row);\r\n  }\r\n  console.log(nodes);\r\n  alg(nodes, startRow, startCol);\r\n  path.shift();\r\n  return [visited, path];\r\n}\r\n","class Node {\r\n  isEnter = false;\r\n  isExit = false;\r\n  isWallOrVisited = false;\r\n  x;\r\n  y;\r\n  predecessor = undefined;\r\n  constructor(y, x) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nfunction alg(nodes, startY, startX) {\r\n  let queue = [];\r\n  let visited = [];\r\n  queue.push(nodes[startY][startX]);\r\n  nodes[startY][startX].isWallOrVisited = true;\r\n  while (queue.length > 0) {\r\n    const l = queue.length;\r\n    for (let i = 0; i < l; ++i) {\r\n      let t = queue.shift();\r\n      if (nodes[t.y][t.x].isExit === true) {\r\n        let path = [];\r\n        while (t.predecessor !== undefined) {\r\n          path.unshift(`[${t.y - 1}, ${t.x - 1}]`);\r\n          t = t.predecessor;\r\n        }\r\n        //console.log(path);\r\n        return [visited, path];\r\n      }\r\n      visited.push(`[${t.y - 1}, ${t.x - 1}]`);\r\n      if (!nodes[t.y][t.x + 1].isWallOrVisited) {\r\n        queue.push(nodes[t.y][t.x + 1]);\r\n        nodes[t.y][t.x + 1].predecessor = t;\r\n        nodes[t.y][t.x + 1].isWallOrVisited = true;\r\n      }\r\n      if (!nodes[t.y - 1][t.x].isWallOrVisited) {\r\n        queue.push(nodes[t.y - 1][t.x]);\r\n        nodes[t.y - 1][t.x].predecessor = t;\r\n        nodes[t.y - 1][t.x].isWallOrVisited = true;\r\n      }\r\n      if (!nodes[t.y][t.x - 1].isWallOrVisited) {\r\n        queue.push(nodes[t.y][t.x - 1]);\r\n        nodes[t.y][t.x - 1].predecessor = t;\r\n        nodes[t.y][t.x - 1].isWallOrVisited = true;\r\n      }\r\n      if (!nodes[t.y + 1][t.x].isWallOrVisited) {\r\n        queue.push(nodes[t.y + 1][t.x]);\r\n        nodes[t.y + 1][t.x].predecessor = t;\r\n        nodes[t.y + 1][t.x].isWallOrVisited = true;\r\n      }\r\n    }\r\n  }\r\n  return [visited, []];\r\n}\r\n\r\nexport default function dijkstra(cells, rows, cols) {\r\n  let nodes = [];\r\n  let startX, startY;\r\n  for (let i = 0; i < rows + 2; ++i) {\r\n    let row = [];\r\n    for (let j = 0; j < cols + 2; ++j) {\r\n      row.push(new Node(i, j));\r\n      if (i === 0 || i === rows + 1 || j === 0 || j === cols + 1) {\r\n        row[j].isWallOrVisited = true;\r\n      } else {\r\n        switch (cells[i - 1][j - 1].type) {\r\n          case \"wall\":\r\n            row[j].isWallOrVisited = true;\r\n            break;\r\n          case \"enter\":\r\n            row[j].isEnter = true;\r\n            startX = j;\r\n            startY = i;\r\n            break;\r\n          case \"exit\":\r\n            row[j].isExit = true;\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n    }\r\n    nodes.push(row);\r\n  }\r\n  console.log(nodes);\r\n  return alg(nodes, startY, startX);\r\n}\r\n","class Node {\r\n  isEnter = false;\r\n  isExit = false;\r\n  isWallOrVisited = false;\r\n  x;\r\n  y;\r\n  distance = Infinity;\r\n  predecessor = undefined;\r\n  constructor(row, col) {\r\n    this.x = col;\r\n    this.y = row;\r\n    this.isExit = false;\r\n    this.isWallOrVisited = false;\r\n  }\r\n}\r\n\r\nclass QElement {\r\n  constructor(element, priority) {\r\n    this.element = element;\r\n    this.priority = priority;\r\n  }\r\n}\r\n\r\nclass PriorityQueue {\r\n  constructor() {\r\n    this.items = [];\r\n    this.length = 0;\r\n  }\r\n\r\n  isEmpty() {\r\n    if (this.items.length > 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  put(element, priority) {\r\n    let qElement = new QElement(element, priority);\r\n    let contain = false;\r\n    for (let i = 0; i < this.items.length; ++i) {\r\n      if (qElement.priority < this.items[i].priority) {\r\n        this.items.splice(i, 0, qElement);\r\n        contain = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!contain) {\r\n      this.items.push(qElement);\r\n    }\r\n    ++this.length;\r\n  }\r\n\r\n  shift() {\r\n    if (!this.isEmpty()) {\r\n      --this.length;\r\n      return this.items.shift().element;\r\n    }\r\n  }\r\n\r\n  getPriority() {\r\n    if (!this.isEmpty()) {\r\n      return this.items[0].priority;\r\n    } else {\r\n      return Infinity;\r\n    }\r\n  }\r\n}\r\n\r\nlet exitRow = 0;\r\nlet exitCol = 0;\r\n\r\nfunction distance(t) {\r\n  return Math.abs(t.x - exitCol) + Math.abs(t.y - exitRow) + t.distance;\r\n}\r\n\r\nfunction alg(nodes, startRow, startCol) {\r\n  let queue = new PriorityQueue();\r\n  let visited = [];\r\n  queue.put(nodes[startRow][startCol], distance(startRow, startCol));\r\n  nodes[startRow][startCol].isWallOrVisited = true;\r\n  while (queue.length > 0) {\r\n    let t = queue.shift();\r\n    if (t.isExit === true) {\r\n      let path = [];\r\n      while (t.predecessor !== undefined) {\r\n        path.unshift(`[${t.y - 1}, ${t.x - 1}]`);\r\n        t = t.predecessor;\r\n      }\r\n      return [visited, path];\r\n    }\r\n    visited.push(`[${t.y - 1}, ${t.x - 1}]`);\r\n    if (!nodes[t.y][t.x + 1].isWallOrVisited) {\r\n      nodes[t.y][t.x + 1].predecessor = t;\r\n      nodes[t.y][t.x + 1].isWallOrVisited = true;\r\n      nodes[t.y][t.x + 1].distance = t.distance + 1;\r\n      queue.put(nodes[t.y][t.x + 1], distance(nodes[t.y][t.x + 1]));\r\n    }\r\n    if (!nodes[t.y - 1][t.x].isWallOrVisited) {\r\n      nodes[t.y - 1][t.x].predecessor = t;\r\n      nodes[t.y - 1][t.x].isWallOrVisited = true;\r\n      nodes[t.y - 1][t.x].distance = t.distance + 1;\r\n      queue.put(nodes[t.y - 1][t.x], distance(nodes[t.y - 1][t.x]));\r\n    }\r\n    if (!nodes[t.y][t.x - 1].isWallOrVisited) {\r\n      nodes[t.y][t.x - 1].predecessor = t;\r\n      nodes[t.y][t.x - 1].isWallOrVisited = true;\r\n      nodes[t.y][t.x - 1].distance = t.distance + 1;\r\n      queue.put(nodes[t.y][t.x - 1], distance(nodes[t.y][t.x - 1]));\r\n    }\r\n    if (!nodes[t.y + 1][t.x].isWallOrVisited) {\r\n      nodes[t.y + 1][t.x].predecessor = t;\r\n      nodes[t.y + 1][t.x].isWallOrVisited = true;\r\n      nodes[t.y + 1][t.x].distance = t.distance + 1;\r\n      queue.put(nodes[t.y + 1][t.x], distance(nodes[t.y + 1][t.x]));\r\n    }\r\n  }\r\n  return [visited, []];\r\n}\r\n\r\nexport default function A_Star(cells, rows, cols) {\r\n  exitRow = 0;\r\n  exitCol = 0;\r\n  let nodes = [];\r\n  let startRow, startCol;\r\n  for (let i = 0; i < rows + 2; ++i) {\r\n    let row = [];\r\n    for (let j = 0; j < cols + 2; ++j) {\r\n      row.push(new Node(i, j));\r\n      if (i === 0 || i === rows + 1 || j === 0 || j === cols + 1) {\r\n        row[j].isWallOrVisited = true;\r\n      } else {\r\n        switch (cells[i - 1][j - 1].type) {\r\n          case \"wall\":\r\n            row[j].isWallOrVisited = true;\r\n            break;\r\n          case \"enter\":\r\n            row[j].isEnter = true;\r\n            startRow = i;\r\n            startCol = j;\r\n            row[j].distance = 0;\r\n            row[j].isWallOrVisited = false;\r\n            break;\r\n          case \"exit\":\r\n            exitRow = i;\r\n            exitCol = j;\r\n            row[j].isExit = true;\r\n            row[j].isWallOrVisited = false;\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n    }\r\n    nodes.push(row);\r\n  }\r\n  return alg(nodes, startRow, startCol);\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Visualizer.css\";\r\nimport dfs from \"./alghorithms/dfs\";\r\nimport dijkstra from \"./alghorithms/dijkstra\";\r\nimport A_Star from \"./alghorithms/a-star\";\r\n\r\nclass Cell {\r\n  type = \"\";\r\n  constructor() {\r\n    this.type = \"default\";\r\n  }\r\n}\r\n\r\nconst rows = 80;\r\nconst cols = 80;\r\n\r\nlet enterRow = 10;\r\nlet enterCol = 10;\r\nlet exitRow = 10;\r\nlet exitCol = 30;\r\n\r\nconst cells = [];\r\nlet isMousePressed = false;\r\nlet isWorking = false;\r\nlet isClearNeeded = false;\r\nlet paintType = \"wall\";\r\n\r\nfunction changePaintType(s) {\r\n  paintType = s;\r\n  document.getElementById(\"paint-enter\").className = \"paint-button\";\r\n  document.getElementById(\"paint-exit\").className = \"paint-button\";\r\n  document.getElementById(\"paint-wall\").className = \"paint-button\";\r\n  document.getElementById(\"paint-\" + s).className = \"paint-button-active\";\r\n}\r\n\r\nfunction changeEnter(row, col) {\r\n  if (cells[row][col].type !== \"exit\") {\r\n    cells[enterRow][enterCol].type = \"default\";\r\n    document.getElementById(`[${enterRow}, ${enterCol}]`).className =\r\n      \"cell default\";\r\n  } else {\r\n    cells[enterRow][enterCol].type = \"exit\";\r\n    document.getElementById(`[${enterRow}, ${enterCol}]`).className =\r\n      \"cell exit\";\r\n    exitRow = enterRow;\r\n    exitCol = enterCol;\r\n  }\r\n  cells[row][col].type = \"enter\";\r\n  document.getElementById(`[${row}, ${col}]`).className = \"cell enter\";\r\n  enterRow = row;\r\n  enterCol = col;\r\n}\r\n\r\nfunction changeExit(row, col) {\r\n  if (cells[row][col].type !== \"enter\") {\r\n    cells[exitRow][exitCol].type = \"default\";\r\n    document.getElementById(`[${exitRow}, ${exitCol}]`).className =\r\n      \"cell default\";\r\n  } else {\r\n    cells[exitRow][exitCol].type = \"enter\";\r\n    document.getElementById(`[${exitRow}, ${exitCol}]`).className =\r\n      \"cell enter\";\r\n    enterRow = exitRow;\r\n    enterCol = exitCol;\r\n  }\r\n  cells[row][col].type = \"exit\";\r\n  document.getElementById(`[${row}, ${col}]`).className = \"cell exit\";\r\n  exitRow = row;\r\n  exitCol = col;\r\n}\r\n\r\nfunction clearGrid() {\r\n  for (let i = 0; i < rows; ++i) {\r\n    for (let j = 0; j < cols; ++j) {\r\n      let t = document.getElementById(`[${i}, ${j}]`);\r\n      if (t.className === \"cell visited\" || t.className === \"cell path\") {\r\n        t.className = \"cell default\";\r\n      }\r\n    }\r\n  }\r\n  isClearNeeded = false;\r\n}\r\n\r\nfunction onMouseDown(row, col) {\r\n  if (!isWorking) {\r\n    if (isClearNeeded) {\r\n      clearGrid();\r\n    }\r\n    if (paintType === \"wall\") {\r\n      if (cells[row][col].type === \"default\") {\r\n        cells[row][col].type = \"wall\";\r\n      } else if (cells[row][col].type === \"wall\") {\r\n        cells[row][col].type = \"default\";\r\n      }\r\n      document.getElementById(`[${row}, ${col}]`).className =\r\n        \"cell \" + cells[row][col].type;\r\n      isMousePressed = true;\r\n    } else if (paintType === \"enter\") {\r\n      changeEnter(row, col);\r\n    } else if (paintType === \"exit\") {\r\n      changeExit(row, col);\r\n    }\r\n  }\r\n}\r\n\r\nfunction onMouseUp() {\r\n  isMousePressed = false;\r\n}\r\n\r\nfunction onMouseEnter(row, col) {\r\n  if (isMousePressed === true && !isWorking && paintType === \"wall\") {\r\n    if (cells[row][col].type === \"default\") {\r\n      cells[row][col].type = \"wall\";\r\n    } else if (cells[row][col].type === \"wall\") {\r\n      cells[row][col].type = \"default\";\r\n    }\r\n    document.getElementById(`[${row}, ${col}]`).className =\r\n      \"cell \" + cells[row][col].type;\r\n  }\r\n}\r\n\r\nasync function animateVisited(ids, alghorithm) {\r\n  let time = 5;\r\n  if (ids.length < 20) {\r\n    time = 200;\r\n  } else if (ids.length < 40) {\r\n    time = 100;\r\n  } else if (ids.length < 80) {\r\n    time = 50;\r\n  } else if (ids.length < 140) {\r\n    time = 25;\r\n  }\r\n  if (time > 5 && alghorithm === \"A*\") {\r\n    time /= 5;\r\n  }\r\n\r\n  for (let i = 1; i < ids.length; ++i) {\r\n    document.getElementById(`${ids[i]}`).className = \"cell visited\";\r\n    await new Promise((res) => setTimeout(res, time));\r\n  }\r\n}\r\n\r\nasync function animatePath(ids) {\r\n  let time = 20;\r\n  if (ids.length == 0) {\r\n    alert(\"Путь не существует\");\r\n  }\r\n  if (ids.length > 1000) {\r\n    time = 15;\r\n  }\r\n  if (ids.length > 2500) {\r\n    time = 10;\r\n  }\r\n  for (let i = 0; i < ids.length - 1; ++i) {\r\n    document.getElementById(`${ids[i]}`).className = \"cell path\";\r\n    await new Promise((res) => setTimeout(res, time));\r\n  }\r\n  isWorking = false;\r\n}\r\n\r\nasync function visualize() {\r\n  if (!isWorking) {\r\n    if (isClearNeeded) {\r\n      clearGrid();\r\n    }\r\n    isClearNeeded = true;\r\n    isWorking = true;\r\n    let visited = [];\r\n    let path = [];\r\n    let alghorithm = document.getElementById(\"alghorithms\").value;\r\n    switch (alghorithm) {\r\n      case \"dijkstra\":\r\n        [visited, path] = await dijkstra(cells, rows, cols);\r\n        break;\r\n      case \"dfs\":\r\n        [visited, path] = await dfs(cells, rows, cols);\r\n        break;\r\n      case \"A*\":\r\n        [visited, path] = await A_Star(cells, rows, cols);\r\n      default:\r\n    }\r\n    await animateVisited(visited, alghorithm);\r\n    await animatePath(path);\r\n    isWorking = false;\r\n  }\r\n}\r\n\r\nexport default class Visualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    for (let row = 0; row < rows; ++row) {\r\n      const currentRow = [];\r\n      for (let col = 0; col < cols; ++col) {\r\n        currentRow.push(new Cell());\r\n      }\r\n      cells.push(currentRow);\r\n    }\r\n    cells[enterRow][enterCol].type = \"enter\";\r\n    cells[exitRow][exitCol].type = \"exit\";\r\n    this.setState(cells);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"menu\">\r\n          <div className=\"menu-column\">\r\n            <button\r\n              className=\"paint-button\"\r\n              id=\"paint-enter\"\r\n              onClick={() => changePaintType(\"enter\")}\r\n            >\r\n              <img className=\"img\" src=\"assets/green.bmp\" alt=\"enter\"></img>\r\n              <p className=\"text\">Точка начала</p>\r\n            </button>\r\n            <br></br>\r\n            <button\r\n              className=\"paint-button\"\r\n              id=\"paint-exit\"\r\n              onClick={() => changePaintType(\"exit\")}\r\n            >\r\n              <img className=\"img\" src=\"assets/gold.bmp\" alt=\"exit\"></img>\r\n              <p className=\"text\">Точка конца</p>\r\n            </button>\r\n            <br></br>\r\n            <button\r\n              className=\"paint-button-active\"\r\n              id=\"paint-wall\"\r\n              onClick={() => changePaintType(\"wall\")}\r\n            >\r\n              <img className=\"img\" src=\"assets/gray.bmp\" alt=\"wall\"></img>\r\n              <p className=\"text\">Стена</p>\r\n            </button>\r\n          </div>\r\n          <div className=\"menu-column\">\r\n            <label htmlFor=\"alghorithms\">Выберите алгоритм: </label>\r\n            <br></br>\r\n            <select id=\"alghorithms\" name=\"alghorithms\">\r\n              <option value=\"dijkstra\">Алгоритм Дейкстры</option>\r\n              <option value=\"dfs\">Поиск в длину</option>\r\n              <option value=\"A*\">A-star</option>\r\n            </select>\r\n            <br></br>\r\n            <button className=\"start-button\" onClick={() => visualize()}>\r\n              Пуск\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid\">\r\n          {cells.map((r, row) => {\r\n            return (\r\n              <div className=\"row\" key={row.toString()}>\r\n                {r.map((c, col) => (\r\n                  <div\r\n                    className={\"cell \" + cells[row][col].type}\r\n                    id={`[${row}, ${col}]`}\r\n                    onMouseDown={() => onMouseDown(row, col)}\r\n                    onMouseUp={() => onMouseUp()}\r\n                    onMouseEnter={() => onMouseEnter(row, col)}\r\n                    key={`${row}, ${col}`}\r\n                  ></div>\r\n                ))}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Visualizer from \"./Project/Visualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer></Visualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}